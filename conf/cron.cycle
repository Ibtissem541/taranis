#!/bin/bash
# Tasks to be run in the usual cycle (by default every 20 minutes)
# You may want to change settings for your instance.

[ -t 0 ] && INTERACTIVE=1

# uncomment this to get the environment variables
#env

# We run this script with the last installed release, as defined in the
# crontab.  Interactively used, we get the taranis version in our path

[ -n "$INTERACTIVE" ] && TARANIS=taranis

umask 022
function trace() {
	[ -n "$INTERACTIVE" ] && echo `date +%H:%M:%S` " $@"
}

# Run a full scan of the configured resources.  Problems are logged to
# the 'errors' table, available in te web-interface.

trace "collector scan-sources"
$TARANIS collector scan-sources


# Check that all collectors are functioning as expected.  When some
# collector reports errors, they will be sent to the maintainers.

trace "collector alerter"
$TARANIS collector alerter


# Cluster the newly found news items
# When you want to restart it (maybe every call) use --reset

trace "cluster news-items"
$TARANIS cluster news-items


# Update the collector statistics with results of the last run.  These are
# combined into the dashboard later.

trace "collector make-stats"
$TARANIS collector make-stats


# Download external statistics.
# These are configured in ~/var/stats/external.xml

trace "collector download-stats"
$TARANIS collector download-stats


# Mail configured feed-digests once a day.  It checks whether the sendinghour
# has been reached, and nothing has been sent today.

trace "collector send-digest"
$TARANIS collector send-digests


# When accidentally forgets to send the End-Of-Shift report, you can
# have it created automatically.  This is disabled when the auto_send_eos
# option is not equal to 'yes'.  But you may also disable the line below.

trace "publications autosend-eos"
$TARANIS publications autosend-eos


#XXX needs clearer description what "special interests" are, and who the
#XXX requestors are.
# Send emails to the registered requestors about some oncoming event which
# is of special interest to them.  An email is sent three days before the
# date of the event.

trace "specint send-reminders"
$TARANIS specint send-reminders


# Remove the expired token created for REST access.

trace "rest cleanup-tokens"
$TARANIS rest cleanup-tokens


# Scan the known phishing sites for signs that are taken down.  When that
# is detected, an email gets sent to the username configured with 'phishto'.

trace "phish check-down"
$TARANIS phish check-down


# The Taranis web-interface supports "tools": calling external standard
# and non-standard scripts.  They are kept in ~/var/tools/external.xml
# Each of the tools which defines a 'backend' will be run here.
#
# BE WARNED: that those scripts are called with the permissions of the
# webserver, not this user, when started via the web-page.  This may
# cause problems with read or write rights.

trace "tools run-backends"
$TARANIS tools run-backends


#--- ADDITIONAL TOOLS WILL GET INSERTED HERE AUTOMATICALLY --- DO NOT REMOVE
# WARNING: upgrades may add additional calls to the end of this script, so
# do not end this script with 'exit'
:  # force rc=0
